#Область СлужебныеПроцедурыИФункции
// Отправить HTTPЗапрос.
// 
// Параметры:
//  Гиперссылка - Строка - Ссылка сайта
// 
// Возвращаемое значение:
//  HTTPОтвет - Ответ на HTTPЗапрос
Функция ОтправитьHTTPЗапрос(Гиперссылка) Экспорт

	БезПротокола = Сред(Гиперссылка, 9);
	Позиция = СтрНайти(БезПротокола, "/");
	Сервер = Лев(БезПротокола, Позиция - 1);
	АдресРесурса = Сред(БезПротокола, Позиция); 

	HTTPСоединение = Новый HTTPСоединение(Сервер, , , , , 300, Новый ЗащищенноеСоединениеOpenSSL);
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса);

	Попытка

		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);

	Исключение

		Ошибка = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОтправитьСообщениеВТелеграмм(Справочники.ЧатыТелеграмм.Себе.Код, Ошибка);

	КонецПопытки;

	Возврат HTTPОтвет;

КонецФункции

// Отправить сообщение в телеграмм.
// 
// Параметры:
//  ЧатТелеграмм - Строка - ИД чата, для групп ставится дефис вначале
//  Текст - Строка - Текст сообщения
Процедура ОтправитьСообщениеВТелеграмм(ЧатТелеграмм, Текст) Экспорт

	Сервер = "api.telegram.org";
	Токен = "5428294780:AAEuJw-2ZA2C3ytOWoX4RLS1yjCm6d1RVJY";
	Страница = СтрШаблон("/bot%1/sendMessage?chat_id=%2&text=%3", Токен, ЧатТелеграмм, Текст);
	HTTPСоединение = Новый HTTPСоединение(Сервер, , , , , 30, Новый ЗащищенноеСоединениеOpenSSL);
	HTTPЗапрос = Новый HTTPЗапрос(Страница);
	HTTPСоединение.Получить(HTTPЗапрос);

КонецПроцедуры

Процедура СохранитьСписокСтраниц(Источник, Отказ) Экспорт
	
	ИспользоватьHeadless = Константы.ИспользоватьHeadless.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КнигиТовары.Магазин,
		|	КнигиТовары.ТипКниги,
		|	КнигиТовары.Гиперссылка
		|ИЗ
		|	Справочник.Книги.Товары КАК КнигиТовары
		|ГДЕ
		|	НЕ КнигиТовары.Ссылка.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСтрокHTML = Новый Массив;
	МассивСтрокHTML.Добавить("import time");
	МассивСтрокHTML.Добавить("import undetected_chromedriver as uc");
	МассивСтрокHTML.Добавить(Символы.ПС);
	МассивСтрокHTML.Добавить("MyStructure = {}");
	
	Пока Выборка.Следующий() Цикл
		
		МассивСсылок = СтрРазделить(Выборка.Гиперссылка, ";");
		
		Для Каждого Гиперссылка Из МассивСсылок Цикл
			
			ИмяФайла = Сред(Гиперссылка, 9);
			ИмяФайла = СтрЗаменить(ИмяФайла, ".", "_");
			ИмяФайла = СтрЗаменить(ИмяФайла, "/", "_");
			ИмяФайла = СтроковыеФункции.СтрокаЛатиницей(ИмяФайла);

			МассивСтрокHTML.Добавить(СтрШаблон("MyStructure[""%1""] = ""%2""", Гиперссылка, ИмяФайла));
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивСтрокHTML.Добавить(Символы.ПС);
	МассивСтрокHTML.Добавить("for Element in MyStructure.items():");
	МассивСтрокHTML.Добавить(Символы.Таб + "if '__main__' == __name__:");
	МассивСтрокHTML.Добавить(Символы.ПС);
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "options = uc.ChromeOptions()");
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "options.add_argument(""--headless"")");
	МассивСтрокHTML.Добавить(Символы.ПС);
	
	options = ?(ИспользоватьHeadless, "options=options", "");
	
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + СтрШаблон("driver = uc.Chrome(%1)", options));
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "driver.get(Element[0])");
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "time.sleep(5)");
	МассивСтрокHTML.Добавить(Символы.ПС);
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "html = driver.page_source");
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "with open('/Users/plotnikov1c/html/pages/' + Element[1], 'w', encoding='utf-8') as f:");
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + Символы.Таб + "f.write(html)");
	МассивСтрокHTML.Добавить(Символы.ПС);
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "driver.close()");
	МассивСтрокHTML.Добавить(Символы.Таб + Символы.Таб + "driver.quit()");
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	
	Для Каждого Строка Из МассивСтрокHTML Цикл
		
		ТекстовыйДокумент.ДобавитьСтроку(Строка);
		
	КонецЦикла;
	
	ТекстовыйДокумент.Записать("/Users/plotnikov1c/html/load_pages.py", КодировкаТекста.UTF8);
	
КонецПроцедуры
#КонецОбласти
